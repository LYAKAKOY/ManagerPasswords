name: Python Application Test

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:

  build:

    runs-on: ubuntu-latest
    strategy:
      env:
        DATABASE: localhost
        POSTGRES_DB: hello_fastapi_dev
        POSTGRES_USER: hello_fastapi
        POSTGRES_PASSWORD: hello_fastapi
      matrix:
        python-version: [3.11]

    steps:
      - uses: actions/checkout@v2
      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v2
        with:
          python-version: ${{ matrix.python-version }}

      - name: Install dependencies
        run: |
            python -m pip install --upgrade pip
            pip install poetry
            cd backend && poetry export --without-hashes --with test -f requirements.txt -o requirements.txt
            pip install -r requirements.txt
      - name: Lint with flake8
        run: |
            pip install flake8
            # stop the build if there are Python syntax errors or undefined names
            flake8 . --count --select=E9,F63,F7,F82 --show-source --statistics
            # exit-zero treats all errors as warnings. The GitHub editor is 127 chars wide
            flake8 . --count --exit-zero --max-complexity=10 --max-line-length=127 --statistics
      - name: Setup PostgreSQL
        uses: Harmon758/postgresql-action@v1.0.0
        with:
          postgresql version: 15-alpine
          postgresql db: hello_fastapi_dev
          postgresql user: hello_fastapi
          postgresql password: hello_fastapi
      - name: Test with pytest
        run: |
          cd backend && pytest